{"version":3,"sources":["bugtracker/tests/adapters/application.jshint.js","bugtracker/tests/app.jshint.js","bugtracker/tests/bugs/details/route.jshint.js","bugtracker/tests/bugs/edit/route.jshint.js","bugtracker/tests/bugs/new/route.jshint.js","bugtracker/tests/bugs/route.jshint.js","bugtracker/tests/helpers/destroy-app.js","bugtracker/tests/helpers/destroy-app.jshint.js","bugtracker/tests/helpers/module-for-acceptance.js","bugtracker/tests/helpers/module-for-acceptance.jshint.js","bugtracker/tests/helpers/resolver.js","bugtracker/tests/helpers/resolver.jshint.js","bugtracker/tests/helpers/start-app.js","bugtracker/tests/helpers/start-app.jshint.js","bugtracker/tests/models/bug.jshint.js","bugtracker/tests/models/comment.jshint.js","bugtracker/tests/router.jshint.js","bugtracker/tests/test-helper.js","bugtracker/tests/test-helper.jshint.js","bugtracker/tests/unit/adapters/application-test.js","bugtracker/tests/unit/adapters/application-test.jshint.js","bugtracker/tests/unit/bugs/details/route-test.js","bugtracker/tests/unit/bugs/details/route-test.jshint.js","bugtracker/tests/unit/bugs/edit/route-test.js","bugtracker/tests/unit/bugs/edit/route-test.jshint.js","bugtracker/tests/unit/bugs/new/route-test.js","bugtracker/tests/unit/bugs/new/route-test.jshint.js","bugtracker/tests/unit/bugs/route-test.js","bugtracker/tests/unit/bugs/route-test.jshint.js","bugtracker/tests/unit/models/bug-test.js","bugtracker/tests/unit/models/bug-test.jshint.js","bugtracker/tests/unit/models/comment-test.js","bugtracker/tests/unit/models/comment-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('bugtracker/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters');\n  QUnit.test('adapters/application.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('bugtracker/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('bugtracker/tests/bugs/details/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - bugs/details');\n  QUnit.test('bugs/details/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'bugs/details/route.js should pass jshint.');\n  });\n});","define('bugtracker/tests/bugs/edit/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - bugs/edit');\n  QUnit.test('bugs/edit/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'bugs/edit/route.js should pass jshint.');\n  });\n});","define('bugtracker/tests/bugs/new/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - bugs/new');\n  QUnit.test('bugs/new/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'bugs/new/route.js should pass jshint.');\n  });\n});","define('bugtracker/tests/bugs/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - bugs');\n  QUnit.test('bugs/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'bugs/route.js should pass jshint.\\nbugs/route.js: line 22, col 119, Expected an assignment or function call and instead saw an expression.\\n\\n1 error');\n  });\n});","define('bugtracker/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('bugtracker/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/destroy-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('bugtracker/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'bugtracker/tests/helpers/start-app', 'bugtracker/tests/helpers/destroy-app'], function (exports, _qunit, _bugtrackerTestsHelpersStartApp, _bugtrackerTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _bugtrackerTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _bugtrackerTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('bugtracker/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/module-for-acceptance.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('bugtracker/tests/helpers/resolver', ['exports', 'ember-resolver', 'bugtracker/config/environment'], function (exports, _emberResolver, _bugtrackerConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _bugtrackerConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _bugtrackerConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('bugtracker/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('bugtracker/tests/helpers/start-app', ['exports', 'ember', 'bugtracker/app', 'bugtracker/config/environment'], function (exports, _ember, _bugtrackerApp, _bugtrackerConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _bugtrackerConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _bugtrackerApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('bugtracker/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('bugtracker/tests/models/bug.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/bug.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/bug.js should pass jshint.');\n  });\n});","define('bugtracker/tests/models/comment.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/comment.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/comment.js should pass jshint.');\n  });\n});","define('bugtracker/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('bugtracker/tests/test-helper', ['exports', 'bugtracker/tests/helpers/resolver', 'ember-qunit'], function (exports, _bugtrackerTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_bugtrackerTestsHelpersResolver['default']);\n});","define('bugtracker/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('bugtracker/tests/unit/adapters/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('bugtracker/tests/unit/adapters/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/adapters');\n  QUnit.test('unit/adapters/application-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.');\n  });\n});","define('bugtracker/tests/unit/bugs/details/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:bugs/details', 'Unit | Route | bugs/details', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('bugtracker/tests/unit/bugs/details/route-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/bugs/details');\n  QUnit.test('unit/bugs/details/route-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/bugs/details/route-test.js should pass jshint.');\n  });\n});","define('bugtracker/tests/unit/bugs/edit/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:bugs/edit', 'Unit | Route | bugs/edit', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('bugtracker/tests/unit/bugs/edit/route-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/bugs/edit');\n  QUnit.test('unit/bugs/edit/route-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/bugs/edit/route-test.js should pass jshint.');\n  });\n});","define('bugtracker/tests/unit/bugs/new/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:bugs/new', 'Unit | Route | bugs/new', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('bugtracker/tests/unit/bugs/new/route-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/bugs/new');\n  QUnit.test('unit/bugs/new/route-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/bugs/new/route-test.js should pass jshint.');\n  });\n});","define('bugtracker/tests/unit/bugs/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:bugs', 'Unit | Route | bugs', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('bugtracker/tests/unit/bugs/route-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/bugs');\n  QUnit.test('unit/bugs/route-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/bugs/route-test.js should pass jshint.');\n  });\n});","define('bugtracker/tests/unit/models/bug-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('bug', 'Unit | Model | bug', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('bugtracker/tests/unit/models/bug-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/bug-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/bug-test.js should pass jshint.');\n  });\n});","define('bugtracker/tests/unit/models/comment-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('comment', 'Unit | Model | comment', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('bugtracker/tests/unit/models/comment-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/comment-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/comment-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('bugtracker/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}